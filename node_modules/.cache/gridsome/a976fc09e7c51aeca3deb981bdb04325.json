{"remainingRequest":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/plpetkov/Development/kubb.in/kubb.in-frontend/src/pages/Register.vue?vue&type=template&id=1f24bdc7&","dependencies":[{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/src/pages/Register.vue","mtime":1613741448274},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"ClientOnly\", [\n    _c(\"div\", [\n      _c(\"link\", {\n        attrs: {\n          rel: \"stylesheet\",\n          href: \"https://fonts.googleapis.com/css?family=Nunito\"\n        }\n      }),\n      _c(\"link\", { attrs: { rel: \"stylesheet\", href: \"login.css\" } }),\n      _c(\"div\", { attrs: { id: \"login\" } }, [\n        _c(\"div\", { attrs: { id: \"description\" } }, [\n          _c(\"h1\", [_vm._v(\"Kubb.in\")]),\n          _c(\"p\", [\n            _vm._v(\n              \"\\n          By registering, you are willing to save time and be more organized as\\n          you will have complete control over your micro transactions that come\\n          from subscriptions and renewals\\n        \"\n            )\n          ]),\n          _c(\"p\", [\n            _c(\"a\", { attrs: { href: \"/login\" } }, [\n              _vm._v(\"To the login page\")\n            ])\n          ])\n        ]),\n        _c(\"div\", { attrs: { id: \"form\" } }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.doRegister($event)\n                }\n              }\n            },\n            [\n              _c(\"p\", { staticClass: \"error\", attrs: { id: \"usernameErr\" } }, [\n                _vm._v(\"error\")\n              ]),\n              _c(\"label\", { attrs: { for: \"username\" } }, [_vm._v(\"Username\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.username,\n                    expression: \"username\"\n                  }\n                ],\n                attrs: {\n                  type: \"text\",\n                  id: \"username\",\n                  placeholder: \"username\",\n                  autocomplete: \"off\"\n                },\n                domProps: { value: _vm.username },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.username = $event.target.value\n                  }\n                }\n              }),\n              _c(\"p\", { staticClass: \"error\", attrs: { id: \"emailErr\" } }, [\n                _vm._v(\"error\")\n              ]),\n              _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.email,\n                    expression: \"email\"\n                  }\n                ],\n                attrs: {\n                  type: \"text\",\n                  id: \"email\",\n                  placeholder: \"email@domain.com\",\n                  autocomplete: \"off\"\n                },\n                domProps: { value: _vm.email },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.email = $event.target.value\n                  }\n                }\n              }),\n              _c(\"p\", { staticClass: \"error\", attrs: { id: \"passwordErr\" } }, [\n                _vm._v(\"error\")\n              ]),\n              _c(\"label\", { attrs: { for: \"password\" } }, [_vm._v(\"Password\")]),\n              _c(\"font-awesome-icon\", {\n                attrs: { icon: _vm.passwordIcon },\n                on: {\n                  click: function($event) {\n                    return _vm.hidePassword()\n                  }\n                }\n              }),\n              _vm.passwordType === \"checkbox\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"password\",\n                      placeholder: \"**********\",\n                      type: \"checkbox\"\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.password)\n                        ? _vm._i(_vm.password, null) > -1\n                        : _vm.password\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = _vm.password,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.password = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.password = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.password = $$c\n                        }\n                      }\n                    }\n                  })\n                : _vm.passwordType === \"radio\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"password\",\n                      placeholder: \"**********\",\n                      type: \"radio\"\n                    },\n                    domProps: { checked: _vm._q(_vm.password, null) },\n                    on: {\n                      change: function($event) {\n                        _vm.password = null\n                      }\n                    }\n                  })\n                : _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"password\",\n                      placeholder: \"**********\",\n                      type: _vm.passwordType\n                    },\n                    domProps: { value: _vm.password },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.password = $event.target.value\n                      }\n                    }\n                  }),\n              _c(\"p\", { staticClass: \"error\", attrs: { id: \"cpasswordErr\" } }, [\n                _vm._v(\"error\")\n              ]),\n              _c(\"label\", { attrs: { for: \"cpassword\" } }, [\n                _vm._v(\"Confirm Password\")\n              ]),\n              _c(\"font-awesome-icon\", {\n                attrs: { icon: _vm.passwordIcon },\n                on: {\n                  click: function($event) {\n                    return _vm.hidePassword()\n                  }\n                }\n              }),\n              _vm.passwordType === \"checkbox\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.cpassword,\n                        expression: \"cpassword\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"cpassword\",\n                      placeholder: \"**********\",\n                      type: \"checkbox\"\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.cpassword)\n                        ? _vm._i(_vm.cpassword, null) > -1\n                        : _vm.cpassword\n                    },\n                    on: {\n                      change: function($event) {\n                        var $$a = _vm.cpassword,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.cpassword = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.cpassword = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.cpassword = $$c\n                        }\n                      }\n                    }\n                  })\n                : _vm.passwordType === \"radio\"\n                ? _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.cpassword,\n                        expression: \"cpassword\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"cpassword\",\n                      placeholder: \"**********\",\n                      type: \"radio\"\n                    },\n                    domProps: { checked: _vm._q(_vm.cpassword, null) },\n                    on: {\n                      change: function($event) {\n                        _vm.cpassword = null\n                      }\n                    }\n                  })\n                : _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.cpassword,\n                        expression: \"cpassword\"\n                      }\n                    ],\n                    attrs: {\n                      id: \"cpassword\",\n                      placeholder: \"**********\",\n                      type: _vm.passwordType\n                    },\n                    domProps: { value: _vm.cpassword },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.cpassword = $event.target.value\n                      }\n                    }\n                  }),\n              _c(\"button\", { attrs: { type: \"submit\" } }, [_vm._v(\"Register\")])\n            ],\n            1\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}