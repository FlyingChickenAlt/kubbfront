{"remainingRequest":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/plpetkov/Development/kubb.in/kubb.in-frontend/src/pages/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/src/pages/Register.vue","mtime":1613741448274},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/plpetkov/Development/kubb.in/kubb.in-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  metaInfo: {\n    title: \"Register with us\",\n  },\n  mounted() {\n    if (typeof window !== `undefined`) {\n    window.$ = require(\"jquery\");\n    }\n  },\n  data() {\n    return {\n      passwordType:'password',\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      cpassword: \"\",\n      passwordIcon:'eye'\n    };\n  },\n  methods: {\n    hidePassword(){\n      this.passwordType == 'text' ? this.passwordType = 'password'  : this.passwordType = 'text'\n      this.passwordIcon == 'eye' ? this.passwordIcon = 'eye-slash' : this.passwordIcon = 'eye'\n      },\n    doRegister() {\n      doRegistration(\n        `${username.value}`,\n        `${email.value}`,\n        `${password.value}`,\n        `${cpassword.value}`\n      );\n    },\n  },\n};\n\nfunction doRegistration(username, email, password, cpassword) {\n  let e = validateEmail(\"emailErr\", email);\n  let u = validateUsername(\"usernameErr\", username);\n  let p = validatePassword(\"passwordErr\", password, \"cpasswordErr\", cpassword);\n  if (e == true && u == true && p == true) {\n    sendCallToAPI(username, email, password);\n  }\n}\n\nconst sendCallToAPI = (user, mail, pwd) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\n    username: user,\n    email: mail,\n    password: pwd,\n    roles: [\"user\"],\n  });\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\",\n  };\n\n  fetch(\"https://kubb.in:8080/api/auth/signup\", requestOptions)\n    .then((response) => response.text())\n    .then((result) => (window.location.href = \"/login\"))\n    .catch((error) => console.log(\"error\", error));\n};\n\nconst validateEmail = (dh, email) => {\n  const invalidEmail = \"Invalid email adress. Please try again\";\n  let displayHandler = document.getElementById(dh);\n  let emailFormat = /\\S+@\\S+\\.\\S+/;\n  let emailString = email;\n\n  if (!emailFormat.test(emailString)) {\n    displayHandler.innerHTML = invalidEmail;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    return false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    return true;\n  }\n};\n\nconst validateUsername = (dh, username) => {\n  const invalidUsername =\n    \"Invalid Username. It must have minimum 4 characters. Please try again\";\n  let displayHandler = document.getElementById(dh);\n  let usernameFormat = /[a-zA-Z]{4,}/;\n  let usernameString = username;\n\n  if (!usernameFormat.test(usernameString)) {\n    displayHandler.innerHTML = invalidUsername;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    return false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    return true;\n  }\n};\n\nconst validatePassword = (dh, password, dh2, cpassword) => {\n  const invalidPassword =\n    \"Invalid Password. It must have minimum 8 characters. And it must contain letters and numbers. Please try again\";\n  const notMatchingPasswords = \"Passwords don't match\";\n  let displayHandler = document.getElementById(dh);\n  let displayHandler2 = document.getElementById(dh2);\n  let passwordFormat = /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}/;\n  let atleastOneNumber = /\\d+/;\n\n  let passwordString = password;\n  let cpasswordString = cpassword;\n  let passwordsMatch = false;\n  let passwordFormatIsOk = false;\n\n  if (!passwordFormat.test(passwordString)) {\n    displayHandler.innerHTML = invalidPassword;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    passwordFormatIsOk = false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    passwordFormatIsOk = true;\n  }\n\n  if (passwordString !== cpasswordString) {\n    displayHandler2.innerHTML = notMatchingPasswords;\n    displayHandler2.style.display = \"block\";\n    displayHandler.focus();\n    passwordsMatch = false;\n  } else {\n    displayHandler2.innerHTML = \"\";\n    displayHandler2.style.display = \"none\";\n    passwordsMatch = true;\n  }\n\n  if (passwordFormatIsOk && passwordsMatch) {\n    return true;\n  } else {\n    return false;\n  }\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n<ClientOnly>\n  <div>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Nunito\"\n    />\n    <link rel=\"stylesheet\" href=\"login.css\" />\n    <div id=\"login\">\n      <div id=\"description\">\n        <h1>Kubb.in</h1>\n        <p>\n          By registering, you are willing to save time and be more organized as\n          you will have complete control over your micro transactions that come\n          from subscriptions and renewals\n        </p>\n        <p>\n          <a href=\"/login\">To the login page</a>\n        </p>\n      </div>\n      <div id=\"form\">\n        <form @submit.prevent=\"doRegister\">\n          <p class=\"error\" id=\"usernameErr\">error</p>\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"username\"\n            placeholder=\"username\"\n            autocomplete=\"off\"\n          />\n          <p class=\"error\" id=\"emailErr\">error</p>\n\n          <label for=\"email\">Email</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            v-model=\"email\"\n            placeholder=\"email@domain.com\"\n            autocomplete=\"off\"\n          />\n          <p class=\"error\" id=\"passwordErr\">error</p>\n\n          <label for=\"password\">Password</label>\n           <font-awesome-icon\n             :icon='passwordIcon'\n            @click=\"hidePassword()\"\n          ></font-awesome-icon>\n          <input\n            :type=\"passwordType\"\n            id=\"password\"\n            v-model=\"password\"\n            placeholder=\"**********\"\n          />\n          <p class=\"error\" id=\"cpasswordErr\">error</p>\n          <label for=\"cpassword\">Confirm Password</label>\n          <font-awesome-icon\n            :icon='passwordIcon'\n            @click=\"hidePassword()\"\n          ></font-awesome-icon>\n          <input\n            :type=\"passwordType\"\n            id=\"cpassword\"\n            v-model=\"cpassword\"\n            placeholder=\"**********\"\n          />\n\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  </ClientOnly>\n</template>\n\n<script>\nexport default {\n  metaInfo: {\n    title: \"Register with us\",\n  },\n  mounted() {\n    if (typeof window !== `undefined`) {\n    window.$ = require(\"jquery\");\n    }\n  },\n  data() {\n    return {\n      passwordType:'password',\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      cpassword: \"\",\n      passwordIcon:'eye'\n    };\n  },\n  methods: {\n    hidePassword(){\n      this.passwordType == 'text' ? this.passwordType = 'password'  : this.passwordType = 'text'\n      this.passwordIcon == 'eye' ? this.passwordIcon = 'eye-slash' : this.passwordIcon = 'eye'\n      },\n    doRegister() {\n      doRegistration(\n        `${username.value}`,\n        `${email.value}`,\n        `${password.value}`,\n        `${cpassword.value}`\n      );\n    },\n  },\n};\n\nfunction doRegistration(username, email, password, cpassword) {\n  let e = validateEmail(\"emailErr\", email);\n  let u = validateUsername(\"usernameErr\", username);\n  let p = validatePassword(\"passwordErr\", password, \"cpasswordErr\", cpassword);\n  if (e == true && u == true && p == true) {\n    sendCallToAPI(username, email, password);\n  }\n}\n\nconst sendCallToAPI = (user, mail, pwd) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\n    username: user,\n    email: mail,\n    password: pwd,\n    roles: [\"user\"],\n  });\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\",\n  };\n\n  fetch(\"https://kubb.in:8080/api/auth/signup\", requestOptions)\n    .then((response) => response.text())\n    .then((result) => (window.location.href = \"/login\"))\n    .catch((error) => console.log(\"error\", error));\n};\n\nconst validateEmail = (dh, email) => {\n  const invalidEmail = \"Invalid email adress. Please try again\";\n  let displayHandler = document.getElementById(dh);\n  let emailFormat = /\\S+@\\S+\\.\\S+/;\n  let emailString = email;\n\n  if (!emailFormat.test(emailString)) {\n    displayHandler.innerHTML = invalidEmail;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    return false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    return true;\n  }\n};\n\nconst validateUsername = (dh, username) => {\n  const invalidUsername =\n    \"Invalid Username. It must have minimum 4 characters. Please try again\";\n  let displayHandler = document.getElementById(dh);\n  let usernameFormat = /[a-zA-Z]{4,}/;\n  let usernameString = username;\n\n  if (!usernameFormat.test(usernameString)) {\n    displayHandler.innerHTML = invalidUsername;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    return false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    return true;\n  }\n};\n\nconst validatePassword = (dh, password, dh2, cpassword) => {\n  const invalidPassword =\n    \"Invalid Password. It must have minimum 8 characters. And it must contain letters and numbers. Please try again\";\n  const notMatchingPasswords = \"Passwords don't match\";\n  let displayHandler = document.getElementById(dh);\n  let displayHandler2 = document.getElementById(dh2);\n  let passwordFormat = /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}/;\n  let atleastOneNumber = /\\d+/;\n\n  let passwordString = password;\n  let cpasswordString = cpassword;\n  let passwordsMatch = false;\n  let passwordFormatIsOk = false;\n\n  if (!passwordFormat.test(passwordString)) {\n    displayHandler.innerHTML = invalidPassword;\n    displayHandler.style.display = \"block\";\n    displayHandler.focus();\n    passwordFormatIsOk = false;\n  } else {\n    displayHandler.innerHTML = \"\";\n    displayHandler.style.display = \"none\";\n    passwordFormatIsOk = true;\n  }\n\n  if (passwordString !== cpasswordString) {\n    displayHandler2.innerHTML = notMatchingPasswords;\n    displayHandler2.style.display = \"block\";\n    displayHandler.focus();\n    passwordsMatch = false;\n  } else {\n    displayHandler2.innerHTML = \"\";\n    displayHandler2.style.display = \"none\";\n    passwordsMatch = true;\n  }\n\n  if (passwordFormatIsOk && passwordsMatch) {\n    return true;\n  } else {\n    return false;\n  }\n};\n</script>\n"]}]}